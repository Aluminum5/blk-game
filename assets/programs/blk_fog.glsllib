/**
 * Copyright 2012 Google, Inc All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//#name blk_fog
//#description BLK fog functions.


//! COMMON

/**
 * Fog near/far, in [near, far].
 */
uniform vec2 u_fogInfo;


/**
 * Fog color.
 */
uniform vec3 u_fogColor;


/**
 * Mixes the fog color into a fragment color.
 * This should be done after the final color has been computed.
 *
 * TODO(benvanik): move fog to vs? cheaper + probably looks better in blocks
 *
 * Usage: fragment shader
 * Uniforms: u_fogInfo, u_fogColor
 *
 * @param fragColor Source fragment color.
 * @return Fragment color after fog has been applied.
 */
vec4 mixFog(vec4 fragColor) {
  float depth = gl_FragCoord.z / gl_FragCoord.w;
  float fogFactor = 1.0 - smoothstep(u_fogInfo.x, u_fogInfo.y, depth);
  return vec4(mix(u_fogColor.rgb, fragColor.rgb, fogFactor).rgb, fragColor.a);
}
